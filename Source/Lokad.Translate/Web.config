<?xml version="1.0"?>
<configuration>
	<configSections>
		<section name="dotNetOpenAuth" type="DotNetOpenAuth.Configuration.DotNetOpenAuthSection" requirePermission="false" allowLocation="true"/>
		<sectionGroup name="elmah">
			<section name="security" requirePermission="false" type="Elmah.SecuritySectionHandler, Elmah"/>
			<section name="errorLog" requirePermission="false" type="Elmah.ErrorLogSectionHandler, Elmah"/>
			<section name="errorMail" requirePermission="false" type="Elmah.ErrorMailSectionHandler, Elmah"/>
			<section name="errorFilter" requirePermission="false" type="Elmah.ErrorFilterSectionHandler, Elmah"/>
		</sectionGroup>
	</configSections>
	<appSettings/>
	<connectionStrings>
		<!-- Note: this is only used when the application is run in IIS -
		     when it is run in Windows Azure, the actual connection string is in ServiceConfiguration.cscfg -->
		<add name="SqlServices" connectionString="YOUR-CONNECTION-HERE" providerName="System.Data.SqlClient"/>
	</connectionStrings>
	<dotNetOpenAuth>
		<openid maxAuthenticationTime="0:25">
			<provider>
				<security requireSsl="false"/>
				<behaviors>
					<!-- Behaviors activate themselves automatically for individual matching requests. 
					     The first one in this list to match an incoming request "owns" the request.  If no
					     profile matches, the default behavior is assumed. -->
					<!--<add type="DotNetOpenAuth.OpenId.Behaviors.PpidGeneration, DotNetOpenAuth" />-->
				</behaviors>
				<!-- Uncomment the following to activate the sample custom store.  -->
				<!--<store type="OpenIdProviderWebForms.Code.CustomStore, OpenIdProviderWebForms" />-->
			</provider>
		</openid>
		<messaging>
			<untrustedWebRequest>
				<whitelistHosts>
					<!-- since this is a sample, and will often be used with localhost -->
					<add name="localhost"/>
				</whitelistHosts>
			</untrustedWebRequest>
		</messaging>
	</dotNetOpenAuth>
	<elmah>
		<!-- When running in Windows Azure, the Connection String is injected from ServiceConfiguration.cscfg -->
		<errorLog type="Lokad.Translate.AzureSqlErrorLog, Lokad.Translate" connectionStringName="SqlServices"/>
		<security allowRemoteAccess="1"/>
	</elmah>
	<location path="elmah.axd">
		<system.web>
			<authorization>
				<deny users="?"/>
				<allow roles="Manager"/>
			</authorization>
		</system.web>
	</location>
	<system.web>
		<!-- 
            Set compilation debug="true" to insert debugging 
            symbols into the compiled page. Because this 
            affects performance, set this value to true only 
            during development.
    -->
		<compilation debug="true" targetFramework="4.0">
			<assemblies>
				<add assembly="System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL"/>
				<add assembly="System.Web.Abstractions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Web.Routing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
				<add assembly="System.Data.Linq, Version=4.0.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/></assemblies>
		</compilation>
		<!--
            The <authentication> section enables configuration 
            of the security authentication mode used by 
            ASP.NET to identify an incoming user. 
    -->
		<authentication mode="Forms">
			<forms defaultUrl="/Home" loginUrl="~/Account/Login" timeout="2880"/>
		</authentication>
		<roleManager enabled="true" defaultProvider="SimpleRoleProvider">
			<providers>
				<clear/>
				<add name="SimpleRoleProvider" type="Lokad.Translate.BusinessLogic.SimpleRoleProvider, Lokad.Translate"/>
			</providers>
		</roleManager>
		<!--
            The <customErrors> section enables configuration 
            of what to do if/when an unhandled error occurs 
            during the execution of a request. Specifically, 
            it enables developers to configure html error pages 
            to be displayed in place of a error stack trace.

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
    -->
		<customErrors mode="On" defaultRedirect="Home/Error"/>
		<pages controlRenderingCompatibilityVersion="3.5" clientIDMode="AutoID">
			<namespaces>
				<add namespace="System.Web.Mvc"/>
				<add namespace="System.Web.Mvc.Ajax"/>
				<add namespace="System.Web.Mvc.Html"/>
				<add namespace="System.Web.Routing"/>
				<add namespace="System.Linq"/>
				<add namespace="System.Collections.Generic"/>
			</namespaces>
		</pages>
		<httpHandlers>
			<add verb="POST,GET,HEAD" path="elmah.axd" type="Elmah.ErrorLogPageFactory, Elmah"/>
			<add verb="*" path="*.mvc" validate="false" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL"/>
		</httpHandlers>
		<httpModules>
			<add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah"/>
			<add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah"/>
		</httpModules>
	</system.web>
	<system.diagnostics>
		<trace>
			<listeners>
				<!--<add type="Microsoft.WindowsAzure.Diagnostics.DiagnosticMonitorTraceListener, Microsoft.WindowsAzure.Diagnostics, Version=1.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35"
						name="AzureDiagnostics">
					<filter type="" />
				</add>-->
			</listeners>
		</trace>
	</system.diagnostics>
	<system.web.extensions/>
	<!-- 
        The system.webServer section is required for running ASP.NET AJAX under Internet
        Information Services 7.0.  It is not necessary for previous version of IIS.
  -->
	<system.webServer>
		<validation validateIntegratedModeConfiguration="false"/>
		<modules runAllManagedModulesForAllRequests="true">
			<remove name="ErrorLog"/>
			<remove name="ErrorMail"/>
			<add name="ErrorLog" type="Elmah.ErrorLogModule, Elmah" preCondition="managedHandler"/>
			<add name="ErrorMail" type="Elmah.ErrorMailModule, Elmah" preCondition="managedHandler"/>
		</modules>
		<handlers>
			<remove name="MvcHttpHandler"/>
			<remove name="UrlRoutingHandler"/>
			<add name="Elmah" verb="POST,GET,HEAD" path="elmah.axd" preCondition="integratedMode" type="Elmah.ErrorLogPageFactory, Elmah"/>
			<add name="MvcHttpHandler" preCondition="integratedMode" verb="*" path="*.mvc" type="System.Web.Mvc.MvcHttpHandler, System.Web.Mvc, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL"/>
		</handlers>
	</system.webServer>
	<runtime><assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1"><dependentAssembly>
				<assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35"/>
				<bindingRedirect oldVersion="1.0.0.0" newVersion="2.0.0.0"/>
			</dependentAssembly></assemblyBinding></runtime></configuration>
